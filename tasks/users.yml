---

# Configure users, groups, and ssh keys

- name: "Add groups"
  group:
    name: "{{ item.name }}"
    # Let host determine gid if not specified (not recommended for idempotency)
    gid: "{{ item.gid | default(omit) }}"
    state: "{{ item.state | default(system_group_default_state) }}"
  loop: "{{ system_groups }}"

- name: "Add users"
  user:
    name: "{{ item.name }}"
    comment: "{{ item.comment }}"
    groups: "{{ item.groups | default(omit) }}"
    password: "{{ item.password_hash }}"
    # Let host determine uid if not specified (not recommended for idempotency)
    uid: "{{ item.uid | default(omit) }}"
    shell: "{{ item.shell | default(system_user_default_shell) }}"
    # If state is not defined, fall back to the default state (present, unless changed)
    state: "{{ item.state | default(system_user_default_state) }}"
    remove: "{{ system_user_delete_home }}"
  loop: "{{ system_users }}"

- name: "Add users ssh keys"
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    # Ignore errors if a user's public keys file does not exist
    key: "{{ lookup('file', 'files/authorized_keys/{{ item.name }}', errors='ignore') }}"
    exclusive: true # Keys removed should be removed from the server as well
    state: present
  loop: "{{ system_users }}"
  # To prevent an error, skip adding keys to users that are not present
  when: item.state|default(system_user_default_state) == "present"
